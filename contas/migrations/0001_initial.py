# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-07-29 20:56
from __future__ import unicode_literals

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Um nome curto que será usado para identificá-lo de forma única na plataforma', max_length=30, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$', 32), 'Informe um nome de usuário válido. Este valor deve conter apenas letras, números e os caracteres: @/./+/-/_ .', 'invalid')], verbose_name='Usuário')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Nome')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('cpf', models.CharField(blank=True, max_length=100, verbose_name='CPF')),
                ('cidade', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(choices=[('0', 'Selecione o Estado'), ('1', 'Acre'), ('2', 'Alagoas'), ('3', 'Amazonas'), ('4', 'Amapá'), ('5', 'Bahia'), ('6', 'Ceará'), ('7', 'Distrito Federal'), ('8', 'Espírito Santo'), ('9', 'Goiás'), ('10', 'Maranhão'), ('11', 'Mato Grosso'), ('12', 'Mato Grosso do Sul'), ('13', 'Minas Gerais'), ('14', 'Pará'), ('15', 'Paraíba'), ('16', 'Paraná'), ('17', 'Pernambuco'), ('18', 'Piauí'), ('19', 'Rio de Janeiro'), ('20', 'Rio Grande do Norte'), ('21', 'Rondônia'), ('22', 'Rio Grande do Sul'), ('23', 'Roraima'), ('24', 'Santa Catarina'), ('25', 'Sergipe'), ('26', 'São Paulo'), ('27', 'Tocantins')], max_length=100, verbose_name='Estado')),
                ('telefone', models.CharField(blank=True, max_length=100, verbose_name='Telefone')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Admin')),
                ('is_professor', models.BooleanField(default=False, verbose_name='Professor')),
                ('data_entrou', models.DateTimeField(auto_now_add=True, verbose_name='Data de Entrada')),
                ('data_atualizou', models.DateTimeField(auto_now=True, verbose_name='Data de Última Atualização')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
